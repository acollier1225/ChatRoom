{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jadearden/Documents/React/chat-room/client/src/components/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client'; // import './Chat.css'\n\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000/';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: event => setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"GI/LO84Eph99/DrilJHngVVgHQ8=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jadearden/Documents/React/chat-room/client/src/components/chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","ENDPOINT","parse","search","emit","off","on","message","event","setMessage","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CACA;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMa,QAAQ,GAAG,iBAAjB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACY,KAAZ,CAAkBR,QAAQ,CAACS,MAA3B,CAAvB;AAEAX,IAAAA,MAAM,GAAGD,EAAE,CAACU,QAAD,CAAX;AAEAL,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;AAAET,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,MAAM,CAEzC,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACY,IAAP,CAAY,YAAZ;AAEAZ,MAAAA,MAAM,CAACa,GAAP;AACH,KAJD;AAKH,GAjBQ,EAiBN,CAACJ,QAAD,EAAWP,QAAQ,CAACS,MAApB,CAjBM,CAAT;AAmBAd,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACc,EAAP,CAAU,SAAV,EAAsBC,OAAD,IAAa;AAC9BP,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACR,QAAD,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAO,QAAA,KAAK,EAAEQ,OAAd;AAAuB,QAAA,QAAQ,EAAGC,KAAD,IAAWC,UAAU,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtCD;;GAAMlB,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n// import './Chat.css'\n\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000/';\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room }, () => {\n            \n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    }, [ENDPOINT, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        })\n    }, [messages]);\n\n    return ( \n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <input value={message} onChange={(event) => setMessage(event.target.value)} />\n            </div>\n        </div>\n     );\n}\n \nexport default Chat;"]},"metadata":{},"sourceType":"module"}